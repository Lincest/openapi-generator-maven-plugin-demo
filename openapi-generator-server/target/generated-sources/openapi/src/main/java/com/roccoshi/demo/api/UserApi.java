/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.roccoshi.demo.api;

import com.roccoshi.demo.model.Response;
import com.roccoshi.demo.model.User;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-22T01:39:21.167+08:00[Asia/Shanghai]")
@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

    default UserApiDelegate getDelegate() {
        return new UserApiDelegate() {};
    }

    /**
     * GET /user/save
     *
     * @return get user lists (status code 200)
     */
    @ApiOperation(value = "", nickname = "getUser", notes = "", response = User.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "get user lists", response = User.class, responseContainer = "List") })
    @GetMapping(
        value = "/user/save",
        produces = { "application/json" }
    )
    default ResponseEntity<List<User>> getUser() {
        return getDelegate().getUser();
    }


    /**
     * POST /user/save : save user
     * return init password
     *
     * @param user  (required)
     * @return operate success (status code 200)
     *         or operate down (status code 400)
     */
    @ApiOperation(value = "save user", nickname = "saveUser", notes = "return init password", response = Response.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "operate success", response = Response.class),
        @ApiResponse(code = 400, message = "operate down", response = Response.class) })
    @PostMapping(
        value = "/user/save",
        produces = { "application/json" }
    )
    default ResponseEntity<Response> saveUser(@ApiParam(value = "" ,required=true )  @Valid @RequestBody User user) {
        return getDelegate().saveUser(user);
    }

}
